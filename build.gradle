// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext.buildVersion = [
            major:      1,
            minor:      0,
            channel:    1, // 0: build, 1: alpha, 2: beta, 3: RC, 4: stable
            patch:      18,
            build:      0
    ]

    ext.getVersionName = {
        def baseName = "${buildVersion.major}.${buildVersion.minor}"
        def suffixName = getSuffixVersionName()

        return "${baseName}${suffixName}"
    }

    ext.getSuffixVersionName = {
        def ch = buildVersion.channel
        if ( buildVersion.build > 0 || ch == 0 ) return getVersionBuildName()

        def vChannel = ""
        if ( ch == 1 ) vChannel = "-alpha"
        else if ( ch == 2 ) vChannel = "-beta"
        else if ( ch == 3 ) vChannel = "-RC"
        //else if ( ch == 4 ) vChannel = "" // stable

        def pt = buildVersion.patch
        if ( pt > 0 ) vChannel = "${vChannel}-${pt}"

        return vChannel
    }

    ext.getVersionBuildName = {
        def vBuild = ""
        def bv = buildVersion.build

        if ( bv > 0 ) {
            vBuild = "-build${buildVersion.channel}${buildVersion.patch}${bv}"

            def ch = buildVersion.channel
            if ( ch == 3 )
                throw IllegalArgumentException( "build is ${bv}, but channel is ${ch} ( stable )" )
        }

        return vBuild
    }

    ext.getVersionCode = {
        // pattern:
        // major minor channel patch build
        // 00    00    0      00     00

        def build   = buildVersion.build   *            01
        def patch   = buildVersion.patch   *         01_00
        def channel = buildVersion.channel *       1_00_00
        def minor   = buildVersion.minor   *    01_0_00_00
        def major   = buildVersion.major   * 01_00_0_00_00

        return major + minor + patch + channel + build
    }

    ext.versions = [
            versionName:                getVersionName(),
            versionCode:                getVersionCode(),

            minSdk:                     18,
            targetSdk:                  28,
            sourceCompat:               JavaVersion.VERSION_1_8,
            targetCompat:               JavaVersion.VERSION_1_8,
            buildTools:                 '3.3.0-rc02',

            kotlin:                     '1.3.11',
            kotlinCoroutines:           '1.0.0',
            kotlinCoroutinesAndroid:    '1.0.0',

            appCompat:                  '1.1.0-alpha01',
            bintrayPlugin:              '1.8.4',
            constraintLayout:           '2.0.0-alpha2',
            glide:                      '4.8.0',
            material:                   '1.1.0-alpha02',
            mavenPlugin:                '2.0',
            ktx:                        '1.0.1',
            timber:                     '4.7.1',

            junit:                      '4.12',
            espressoCore:               '3.1.0-alpha3',
            testRunner:                 '1.1.0-alpha3',
    ]

    ext.deps = [
        gradle: [
            android:            "com.android.tools.build:gradle:$versions.buildTools",
            bintray:            "com.jfrog.bintray.gradle:gradle-bintray-plugin:$versions.bintrayPlugin",
            kotlin:             "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
            maven:              "com.github.dcendents:android-maven-gradle-plugin:$versions.mavenPlugin",
        ],
        android: [
            appCompat:          "androidx.appcompat:appcompat:$versions.appCompat",
            constraintLayout:   "androidx.constraintlayout:constraintlayout:$versions.constraintLayout",
            //design:             "com.android.support:design:$versions.support",
            ktx:                "androidx.core:core-ktx:$versions.ktx",
            material:           "com.google.android.material:material:$versions.material",
        ],
        kotlin: [
            coroutines:         "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinCoroutines",
            coroutinesAndroid:  "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinCoroutinesAndroid",
            //reflection:         "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin",
            stdlib:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin",
        ],
        other: [
            glide:              "com.github.bumptech.glide:glide:$versions.glide",
            glideCompiler:      "com.github.bumptech.glide:compiler:$versions.glide",
            timber:             "com.jakewharton.timber:timber:$versions.timber",
        ],
        test: [
            androidJunitRunner: "androidx.test.runner.AndroidJUnitRunner",
            junit:              "junit:junit:$versions.junit",
            espressoCore:       "androidx.test.espresso:espresso-core:$versions.espressoCore",
            testRunner:         "androidx.test:runner:$versions.testRunner",
        ]
    ]

    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath deps.gradle.android
        classpath deps.gradle.kotlin

        classpath deps.gradle.bintray
        classpath deps.gradle.maven

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    tasks.withType(Javadoc).all { enabled = false }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
